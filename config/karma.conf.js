var path = require('path');
var testHelperPath = path.resolve('tests/testHelper.js')

var testPath = 'tests/**/*Spec.js';

module.exports = function(config) {
    config.set({
        basePath: '../',
        // use the PhantomJS browser
        browsers: ['PhantomJS'],
        // use Jasmine
        frameworks: ['jasmine', 'fixture'],

        // files that Karma will server to the browser
        files: [
            // entry file for Webpack
            //this entry file solutions has the issue
            //https://github.com/webpack-contrib/karma-webpack/issues/66
            //The workarouds there are not working also under this env.
            //testHelperPath,

            testPath,
            {
                pattern: 'tests/fixtures/**/*',
            }
        ],
        // before serving test/testHelper.js to the browser
        preprocessors: {
            //see above comments about the entry issue.
            // [testHelperPath]: [
            [testPath]: [
                // use karma-webpack to preprocess the file via webpack
                'webpack',
                // use karma-sourcemap-loader to utilize sourcemaps generated by webpack
                'sourcemap'
            ],


            '**/*.html': ['html2js'],
            '**/*.json': ['json_fixtures'],
            'src/**/*.js': ['coverage']
        },

        jsonFixturesPreprocessor: {
            variableName: '__json__'
        },
        // webpack configuration used by karma-webpack
        webpack: {
            // generate sourcemaps
            devtool: 'inline-source-map',
            // enzyme-specific setup
            externals: {
                'cheerio': 'window',
                'react/addons': true,
                'react/lib/ExecutionEnvironment': true,
                'react/lib/ReactContext': true
            },
            module: {
                // lint JavaScript with Eslint
                preLoaders: [{
                    test: /\.(js|jsx)$/,
                    exclude: /node_modules/,
                    loader: 'eslint'
                }],
                // use same loaders as Create React App
                loaders: [{
                        exclude: [
                            /\.(js|jsx)$/,
                            /\.css$/,
                            /\.json$/,
                        ],
                        loader: 'file',
                        query: {
                            name: 'static/media/[name].[hash:8].[ext]'
                        }
                    },
                    {
                        test: /\.(js|jsx)$/,
                        exclude: /node_modules/,
                        loader: 'babel'
                    },
                    {
                        test: /\.css$/,
                        loader: 'style!css'
                    },
                    {
                        test: /\.json$/,
                        loader: 'json'
                    }
                ]
            },
            // relative path starts out at the src folder when importing modules
            resolve: {
                root: path.resolve('./src')
            }
        },
        reporters: ['spec', 'coverage'],
        specReporter: {
            maxLogLines: 5, // limit number of lines logged per test
            suppressErrorSummary: true, // do not print error summary
            suppressFailed: false, // do not print information about failed tests
            suppressPassed: false, // do not print information about passed tests
            suppressSkipped: true, // do not print information about skipped tests
            showSpecTiming: false, // print the time elapsed for each spec
            failFast: true // test would finish with error when a first fail occurs.
        },

        coverageReporter: {
            dir: 'build/reports/coverage',
            reporters: [{
                    type: 'html',
                    subdir: 'report-html'
                },
                {
                    type: 'lcov',
                    subdir: 'report-lcov'
                },
                {
                    type: 'cobertura',
                    subdir: '.',
                    file: 'cobertura.txt'
                }
            ]
        },
        webpackMiddleware: {
            // only output webpack error messages
            stats: 'errors-only'
        },
    })
}
